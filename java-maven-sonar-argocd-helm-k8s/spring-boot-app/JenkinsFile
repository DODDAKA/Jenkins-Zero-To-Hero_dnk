pipeline {
    agent any
    environment {
        // Define ACR registry URL (replace with your ACR name)
        ACR_REGISTRY = "jenkinsacr.azurecr.io"
         my-acr-credentials-id ="ACR_Cred"
    }
    stages {
        stage('Checkout') {
            steps {
                // Use the credential ID for GitHub access
                sh 'echo passed'
            }
        }

        stage('Build and Test') {
            steps {
                sh 'ls -ltr'
                // Build the project and create a JAR file
                sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean install'
            }
        }

        stage('Login to ACR') {
            steps {
                script {
                    // Use the Jenkins credentials securely with the 'withCredentials' block
                    withCredentials([usernamePassword(credentialsId: 'my-acr-credentials-id', usernameVariable: 'ACR_USERNAME', passwordVariable: 'ACR_PASSWORD')]) {
                        // Login to Azure Container Registry (ACR) using credentials
                        sh """
                            az acr login --name ${ACR_REGISTRY} --username ${ACR_USERNAME} --password ${ACR_PASSWORD}
                        """
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Navigate to the directory containing the Dockerfile and build the image
                    sh """
                        cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                        docker build -t ${ACR_REGISTRY}/my-spring-app:${env.BUILD_ID} .
                    """
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    // Push the Docker image to ACR
                    sh """
                        docker push ${ACR_REGISTRY}/my-spring-app:${env.BUILD_ID}
                    """
                }
            }
        }
    }
}
